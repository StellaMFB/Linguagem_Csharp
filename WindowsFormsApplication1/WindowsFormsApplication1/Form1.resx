<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btvCalcular.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAfBJREFUaEPtmk1OwkAYhnHhfZQajqGCupOEIjHoGdiq6AbcqHfBuJAE7wFpE70B
        G8e+tE3mT2nlaz9rZpJn0fJ25numM7Qk1NY1zzvf5iYpJV/bbXb3vZYf1pv+khvUgXqS0rI1XOS1uuKv
        EIkEUVlbcXUZWnTBp60jLlZ3Is9ycgLEkAk0TnqFYxuXRGDyOhPz+aJwJtOZMi7YWKBx3Ft1HoZh4cwX
        C+NOOAEnkAMngPbvBAC+RoMgsA5KBfp/nr4p4wISAU6cADdkAntHJmXkSAROB1eiPxwbtKPzcg7Hthyu
        l3Pf9afnwMYCmJn+cCQu7+4NLm7HymA4tuVQXDrDcX/rcymFCgA5SyNwpvTpBCovALJu4qybs9RNnIKZ
        0ykjRybABYkAbi3Wt47tOWDLqUvDFy83HfH+aILz+Fzuc2MB3FrK50DjyBfhQ0d8PJngPD6X+yxUAMhZ
        J1C2QCWWEEg3sVwUjtuDayWXbmI5B+TNziJACZsAloDOb3IsAvGjf2SgP/qz5EoXwAyiCH1dg0ps4p8E
        gJx1AmULVGIJgXhzmu/vtpc5W07d7PHLHIrVKeRlLgW/lFTMTJwzs2bOX820jl48IBPgwglwk1sgWofV
        /qvBzmHnABL1ZnfJDepAPUlp+RpuGzdJKZZWq30B4RZ/z/jtJoMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="lbResposta.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>